name: Pinata CD

on:
  push:
    branches: [ "prod" ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
          
      - name: Install
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install
          
      - name: Make env
        run: |
            echo "VITE_DEBUG_MODE="${{secrets.DEBUG_MODE}} >> .env
            echo "VITE_BLOCKNATIVE_KEY="${{secrets.BLOCKNATIVE_KEY}} >> .env
            echo "VITE_NETWORK_ID="${{secrets.NETWORK_ID}} >> .env
            echo "VITE_NETWORK_NAME="${{secrets.NETWORK_NAME}} >> .env
            echo "VITE_LOCAL_NETWORK_ID="${{secrets.LOCAL_NETWORK_ID}} >> .env
            echo "VITE_LOCAL_NETWORK_NAME="${{secrets.LOCAL_NETWORK_NAME}} >> .env
            echo "VITE_LOCAL_NETWORK_URL="${{secrets.LOCAL_NETWORK_URL}} >> .env
            echo "VITE_ZAPPER_KEY="${{secrets.ZAPPER_KEY}} >> .env
            echo "VITE_APP_URL="${{secrets.APP_URL}} >> .env
      
      - name: Build
        uses: borales/actions-yarn@v3.0.0
        with:
          cmd: build
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: production-files
          path: ./dist
          
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: production-files
          path: ./dist
      
      - name: Managa Pinata pin and gateway
        uses: n4n0GH/pinata-manager@main
        with:
          path: ./dist
          secret: ${{secrets.PINATA_SECRET}}
          key: ${{secrets.PINATA_KEY}}
          token: ${{secrets.PINATA_TOKEN}}
          pinName: "Alchemix v2"
          unpinOld: "true"
          gatewayName: "alchemix"
          gatewayId: ${{secrets.PINATA_GATEWAY_ID}}

  cleanup:
    name: Cleanup
    needs: [build, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Remove artifact
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: production-files
